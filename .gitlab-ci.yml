stages:
  - test
  - build
  - deploy

tests_job:
  stage: test
  image: python:3.10.6
  before_script:
    - pip install -r requirements.txt
  script:
    - python3 manage.py test
    - flake8 --config setup.cfg

build_img_docker_job:
  stage: build
  image: docker:24.0.4
  services:
    - docker:24.0.4-dind
  before_script:
     - IMAGE_VERSION=v${CI_COMMIT_TIMESTAMP:0:10}
     - IMAGE_NAME_LONG=${HUB_DOCKER_USERNAME}/${IMAGE_NAME}
  script:
    - docker build -t ${IMAGE_NAME_LONG}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME_LONG}:${IMAGE_VERSION} ${IMAGE_NAME_LONG}:latest
    - echo ${HUB_DOCKER_TOKEN} |
      docker login -u ${HUB_DOCKER_USERNAME} --password-stdin
    - docker push ${IMAGE_NAME_LONG}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME_LONG}:latest
    - docker logout
  only:
    - master

deploy_to_render:
  stage: deploy
  image: python:3.10
  variables:
    # Replace <RENDER_PRIVATE_KEY> with your actual Render private key
    RENDER_PRIVATE_KEY: "rnd_0iWsxmnOZvGWwJl6b8PFGOcaPobm"
    DEPLOY_CURL_COMMAND: 'curl -X POST --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/deployments"'
  script:
    - pip install -r requirements.txt
    - python manage.py collectstatic --noinput
    - apt-get update -qy && apt-get install -y curl
    - echo "$RENDER_PRIVATE_KEY" > ~/.render_token
    - export RENDER_TOKEN=$(cat ~/.render_token)
    - 'eval $DEPLOY_CURL_COMMAND"'

  environment:
    name: render
    url: "https://<YOUR_RENDER_APP_NAME>.onrender.com"
  
  only:
    - develop