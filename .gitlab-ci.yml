stages:
  - test
  - build
  - deploy

#tests_job:
#  stage: test
#  image: python:3.10.6
#  before_script:
#    - pip install -r requirements.txt
#  script:
#    - python3 manage.py test
#    - flake8 --config setup.cfg

build_img_docker_job:
  stage: build
  image: docker:24.0.4
  services:
    - docker:24.0.4-dind
  before_script:
     - IMAGE_VERSION=v${CI_COMMIT_TIMESTAMP:0:10}
     - IMAGE_NAME_LONG=${HUB_DOCKER_USERNAME}/${IMAGE_NAME}
  script:
    - docker build -t ${IMAGE_NAME_LONG}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME_LONG}:${IMAGE_VERSION} ${IMAGE_NAME_LONG}:latest
    - echo ${HUB_DOCKER_TOKEN} |
      docker login -u ${HUB_DOCKER_USERNAME} --password-stdin
    - docker push ${IMAGE_NAME_LONG}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME_LONG}:latest
    - docker logout
  only:
    - master

#docker pull goclusername/p13_open_county_lettings_images:latest

#Deployment:
#  docker:
#    - image: cimg/base:stable
#  steps:
#    - checkout
#    - run:
#      name: "Deploy"
#      command: curl -X GET (lien de l'hook récupéré sur Render)

deploy_job:
  stage: deploy
#  image: ${IMAGE_NAME_LONG}:latest
  image: docker:24.0.4
  services:
    - docker:24.0.4-dind
#  before_script:
#    - docker pull goclusername/p13_open_county_lettings_images:latest
#    - docker images | docker info
  script:
    - gem install dpl
#    - dpl render
  environment: production
#  only:
#    - master

